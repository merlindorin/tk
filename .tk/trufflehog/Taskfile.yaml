version: '3'

vars:
  DEFAULT_GO_BIN: 'go'
  DEFAULT_TRUFFLEHOG_PACKAGE: 'github.com/trufflesecurity/trufflehog/v3'
  DEFAULT_TRUFFLEHOG_BIN_NAME: 'trufflehog'
  DEFAULT_TRUFFLEHOG_VERSION: 'latest'
  DEFAULT_TRUFFLEHOG_GITHUBACTION_FILENAME: '{{ .ROOT_DIR }}/.github/workflows/trufflehog.yml'

tasks:
  default:
    cmds:
      - task: ci
      - task: local

  pre-commit:
    cmd:
      task: local

  run:
    desc: Run trufflehog
    vars:
      BIN_NAME: '{{ .BIN_NAME | default .DEFAULT_TRUFFLEHOG_BIN_NAME }}'
      TRUFFLEHOG_ARGS: '{{ .TRUFFLEHOG_ARGS | default .DEFAULT_TRUFFLEHOG_ARGS }}'
    summary: |
      Run Trufflehog. The purpose is to have a reusable way to run Trufflehog.

      The following variables are available:

      | VARIABLE            | DESCRIPTION               | DEFAULT |
      |---------------------|---------------------------|---------|
      | `TRUFFLEHOG_ARGS`     | trufflehog arguments        | `{{ .DEFAULT_TRUFFLEHOG_ARGS }}` |
      | `BIN_NAME` | trufflehog bin name         | `{{ .DEFAULT_TRUFFLEHOG_BIN_NAME }}` |

      Usual environment variables used for building a golang application are obviously available like:
        - `GOOS` for setting the build OS
        - `GOARCH` for setting the build architecture

      Extra arguments can be provided using `--` (non exclusive with `TRUFFLEHOG_ARGS`).

      Examples:
        - `SOURCES=./cmd/... task {{ .TASK }}` is similar to `trufflehog-lint`
        - `task {{ .TASK }} -- -v` is similar to `trufflehog-lint -v`
        - `TRUFFLEHOG_ARGS="-v" task {{ .TASK }}` is similar to `trufflehog-lint -v`

    cmd: 'go tool {{.BIN_NAME }} {{.TRUFFLEHOG_ARGS}} {{.CLI_ARGS}}'

  install:
    vars:
      GO_BIN: '{{.GO_BIN | default .DEFAULT_GO_BIN}}'
      PACKAGE: '{{.PACKAGE | default .DEFAULT_TRUFFLEHOG_PACKAGE}}'
      VERSION: '{{.VERSION | default .DEFAULT_TRUFFLEHOG_VERSION}}'
    cmd: '{{.GO_BIN}} get -tool {{.PACKAGE}}@{{.VERSION}}'
    status:
      - go tool | grep {{.PACKAGE}}

  uninstall:
    vars:
      PACKAGE: '{{.PACKAGE | default .DEFAULT_TRUFFLEHOG_PACKAGE}}'
      GO_BIN: '{{.GO_BIN | default .DEFAULT_GO_BIN}}'
    cmd: '{{.GO_BIN}} get -tool {{.PACKAGE}}@none'

  local:
    desc: Detect secret leak in current repository
    cmd:
      task: run
      vars:
        CLI_ARGS: 'git file:///pwd --only-verified --fail'

  ci:
    desc: Generate GitHub Action
    summary: |
      Generate a standardized trufflehog GitHub Action configuration.
      This configuration is auto-generated and should not be manually modified as it can be overwritten.
      
      The generated file should be excluded from commits.
    vars:
      GITHUBACTION_FILENAME: '{{.GITHUBACTION_FILENAME | default .DEFAULT_TRUFFLEHOG_GITHUBACTION_FILENAME}}'
    cmds:
      - mkdir -p $(dirname "{{.GITHUBACTION_FILENAME}}")
      - echo "${GITHUBACTION_CONTENT}" > "{{.GITHUBACTION_FILENAME}}"

    status:
      - test -f "{{.GITHUBACTION_FILENAME}}"

    env:
      GITHUBACTION_CONTENT: |
        # THIS FILE HAS BEEN GENERATED BY THE COMMAND `{{.TASK}}`; DO NOT EDIT;
        name: trufflehog
        on:
          pull_request:
          push:
          workflow_dispatch:
          schedule:
            - cron: "0 4 * * *" # run once a day at 4 AM
        
        jobs:
          test:
            runs-on: ubuntu-latest
            steps:
              - name: Checkout code
                uses: actions/checkout@v4
                with:
                  fetch-depth: 0
              - name: Secret Scanning
                uses: trufflesecurity/trufflehog@main
                with:
                  extra_args: --only-verified